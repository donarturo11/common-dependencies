name: Build common deps

on:
  workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
       include:
        - name: "windows-msvc"
          os: windows-latest
          shell: cmd
          toolchain:
            cc: 'cl'
            cxx: 'cl'
          sdks-prefix: 'C:/SDKs/windows-msvc'
        - name: "windows-gcc"
          os: windows-latest
          shell: bash
          toolchain:
            cc: 'gcc.exe'
            cxx: 'gcc.exe'
          sdks-prefix: 'C:/SDKs/windows-mingw'
        - name: "linux-gcc"
          os: ubuntu-latest
          shell: bash
          toolchain:
            cc: 'gcc'
            cxx: 'gcc'
          sdks-prefix: '/opt/SDKs/linux-gcc'
        - name: "macos-clang"
          os: macos-latest
          shell: bash
          toolchain:
            cc: 'clang'
            cxx: 'clang++'
          sdks-prefix: '/opt/SDKs/macos-clang'
    
    runs-on: ${{matrix.os}}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 
    
    - name: Begin env
      shell: bash
      run: |
        echo "ENV:\n ${{ toJSON(env) }}"
        
    - name: Set up Visual Studio shell
      if: ${{ runner.os == 'Windows' }}
      uses: egor-tensin/vs-shell@v2
      with:
        arch: x64
    
    - name: Setup environment
      shell: bash
      run: |
        [[ $RUNNER_OS == 'Linux' ]] && sudo apt-get update && sudo apt-get install ninja-build -y
        [[ $RUNNER_OS == 'Windows' ]] && echo "C:\\mingw64\\bin" >> $GITHUB_PATH
        echo 'CMAKE_GENERATOR=Ninja' >> $GITHUB_ENV
        echo "CMAKE_C_COMPILER=${{ matrix.toolchain.cc }}" >> $GITHUB_ENV
        echo "CC=${{ matrix.toolchain.cc }}" >> $GITHUB_ENV
        echo "CMAKE_CXX_COMPILER=${{ matrix.toolchain.cxx }}" >> $GITHUB_ENV
        echo "CXX=${{ matrix.toolchain.cxx }}" >> $GITHUB_ENV
        echo 'SDKS_PREFIX=${{ matrix.sdks-prefix }}' >> $GITHUB_ENV
        if [[ $RUNNER_OS == 'macOS' ]]; then
         echo 'CMAKE_OSX_ARCHITECTURES=x86_64;arm64' >> $GITHUB_ENV
         echo 'CMAKE_OSX_DEPLOYMENT_TARGET=11' >> $GITHUB_ENV
        fi
        if [[ $RUNNER_OS != 'Windows' ]]; then
          sudo mkdir -p ${{ matrix.sdks-prefix }}
          sudo chmod 777 ${{ matrix.sdks-prefix }}
        fi
    
    - name: Test environment
      shell: bash
      run: |
        echo "GITHUB:"
        echo "${{ toJSON(github) }}"
        echo "ENV:"
        echo "${{ toJSON(env) }}"
        echo "MATRIX:"
        echo "${{ toJSON(matrix) }}"
        
    - name: Test package builder
      uses: ./.github/actions/build-package
      with:
        name: "Foo"
        version: 9999
        source: |
          url1
          url2
          url3
#    - name: Build fftw
#      run: |
#          mkdir fftw3
#          curl -L https://www.fftw.org/fftw-3.3.10.tar.gz | tar -xz --strip-components=1 -C fftw3
#          cmake -S fftw3 -B fftw3-build -DCMAKE_INSTALL_PREFIX=${{ matrix.sdks-prefix }}/fftw3
#          cmake --build fftw3-build
#          cmake --install fftw3-build
          
          
          
      
          



